# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# network_analysis_jc_ks.py
# Created on: 2017-05-09 09:02:49.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: network_analysis_jc_ks <Input_Stop_Locations> <Filter_Stop_Locations> <Choose_Route_Network_Dataset> <Impedance_Attribute> <Restrictions> <Accumulators> <Output_Path_Shape> <U_Turn_Policy> <Use_Hierarchy_in_Analysis> <Field_Mappings> <Sort_Field> <Group_By_Fields> 
# Description: 
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy

PROJECT_DIR = "C:/temp/RegionalTransitDatabase/"

#network globals
NETWORK_DATASET = PROJECT_DIR + "data/TomTom_2015_12_NW.gdb/Routing/Routing_ND"
IMPEDANCE_ATTRIBUTE = "Miles"
U_TURN_POLICY = "ALLOW_UTURNS"
RESTRICTIONS = "'Avoid Walkways';'Driving a Public Bus'" 
ACCUMULATORS = "Miles;Minutes" 
OUTPUT_PATH_SHAPE = "TRUE_LINES_WITHOUT_MEASURES" 
USE_HIERARCHY_IN_ANALYSIS = "true" 

def initialize_network(namespace_name):
    arcpy.MakeRouteLayer_na(NETWORK_DATASET, namespace_name, 
        IMPEDANCE_ATTRIBUTE, "USE_INPUT_ORDER", "PRESERVE_BOTH", 
        "NO_TIMEWINDOWS", ACCUMULATORS, U_TURN_POLICY, 
        RESTRICTIONS, USE_HIERARCHY_IN_ANALYSIS, "", OUTPUT_PATH_SHAPE, "")

NETWORK_NAMESPACE_NAME = "R11"
initialize_network(NETWORK_NAMESPACE_NAME)

#Stop Globals
RESTRICTIONS = "'Avoid Walkways';'Driving a Public Bus'"
GROUP_BY_FIELDS = "Agency_Route_ID" 
SORT_FIELD = "stop_sequence"
FIELD_MAPPINGS = "Name Agency_Route_ID #;RouteName Agency_Route_ID #"
SOLVE_SUCCEEDED = "false"
CHILD_DATA_ELEMENT = "Routes"
# HHTS_TRIPS__2_ = Network_Analyst_Layer
HHTS_TRIPS = "empty_fc"
STOP_LOCATIONS = PROJECT_DIR + "data/network_analyst.gdb/Route_Pattern_Bus_Stops"


#arguments
class bus_route(object):
    '''
    br = bus_route("'AC - 1 - Inbound'")
    >> 
    >> br.stops_tempfile
    array of stop ids 
    >> br.tomtom_segment_ids
    array of tomtom segment id's 
    '''

    #layer paths
    #network data set must be loaded into an MXD Table of contents from catalog. 
    # see https://github.com/MetropolitanTransportationCommission/RegionalTransitDatabase/issues/16 for more


    def __init__(self, routename_id):
        import re
        _route_temp_namespace = re.sub("\W","", routename_id)
        _routefilter = "Agency_Route_Pattern =" + routename_id
        self.stop_tempfile = arcpy.MakeFeatureLayer_management(in_features=STOP_LOCATIONS, 
            out_layer=_route_temp_namespace, 
            where_clause=_routefilter, 
            workspace="")

        self.network_stops = arcpy.AddLocations_na(in_network_analysis_layer=NETWORK_NAMESPACE_NAME,
                                 sub_layer="Stops",
                                 in_table=self.stop_tempfile,
                                 field_mappings=FIELD_MAPPINGS,
                                 search_tolerance="5000 Meters",
                                 sort_field=SORT_FIELD,
                                 search_criteria="Streets SHAPE;Routing_ND_Junctions NONE",
                                 match_type="MATCH_TO_CLOSEST",
                                 append="APPEND",
                                 snap_to_position_along_network="NO_SNAP",
                                 snap_offset="5 Meters",
                                 exclude_restricted_elements="INCLUDE",
                                 search_query="Streets #;Routing_ND_Junctions #")


    # Process: Iterate Feature Selection
    # arcpy.IterateFeatureSelection_mb(Output_Layer, Group_By_Fields, "false")

    # Replace a layer/table view name with a path to a dataset (which can be a layer file) or create the layer/table view within the script
    # The following inputs are layers or table views: "Routing_ND"

    # Process: Make Route Layer


    # Process: Add Locations


    # Replace a layer/table view name with a path to a dataset (which can be a layer file) or create the layer/table view within the script
    # The following inputs are layers or table views: "R1"

    # Process: Solve
    arcpy.Solve_na(Network_Analyst_Layer, "SKIP", "TERMINATE", "")

# # Process: Select Data
# arcpy.SelectData_management(Network_Analyst_Layer, Child_Data_Element)

# # Process: Append
# arcpy.Append_management("Route\\Routes", HHTS_Trips, "NO_TEST", "", "")

